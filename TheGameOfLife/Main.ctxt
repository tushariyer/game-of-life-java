#BlueJ class context
comment0.params=
comment0.target=void\ main()
comment0.text=\n\ Method\ main\ runs\ playGame();\n\n
comment1.params=
comment1.target=void\ playGame()
comment1.text=\n\ Method\ playGame\ runs\ all\ the\ methods\ and\ displays\ the\ program\ in\ the\ console\ window\n\n
comment2.params=until
comment2.target=void\ killProgram(int)
comment2.text=\n\ Method\ killProgram\ is\ a\ method\ that\ will\ stop\ the\ program\ after\ a\ certain\ amount\ of\ time\n\n\ This\ method\ was\ only\ created\ because\ the\ program\ will\ not\ end\ on\ its\ own.\ \n
comment3.params=
comment3.target=void\ message()
comment3.text=\n\ Method\ message\ concatonates\ several\ strings\ and\ displays\ it\ to\ the\ user\ prior\ to\ running\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ program.\n\n
comment4.params=
comment4.target=boolean[][]\ generation()
comment4.text=\n\ Method\ generation\ is\ a\ method\ which\ creates\ the\ 2D\ array\n\n\ @return\ The\ return\ value\ is\ a\ 2D\ array\ called\ grid\n
comment5.params=grid
comment5.target=void\ displayGrid(boolean[][])
comment5.text=\n\ Method\ displayGrid\ looks\ at\ each\ cell\ and\ then\ gives\ it\ a\ dead(.)\ or\ alive(*)\ value\n\n\ @param\ grid\ A\ parameter\ which\ is\ the\ 2D\ array\ on\ which\ the\ program\ is\ displayed\n
comment6.params=grid\ left\ down
comment6.target=int\ neighborCounter(boolean[][],\ int,\ int)
comment6.text=\n\ Method\ neighborCounter\ is\ a\ method\ which\ runs\ several\ conditions\ to\ count\ the\ number\ of\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ neighbors\ that\ exist\ for\ the\ selected\ cell\n\n\ @param\ grid\ A\ parameter\ which\ is\ the\ 2D\ array\ that\ we\ see\ in\ the\ console\ window\n\ @param\ row\ A\ parameter\ which\ is\ an\ integer\ that\ takes\ us\ through\ each\ row\n\ @param\ col\ A\ parameter\ which\ is\ an\ integer\ that\ takes\ us\ through\ each\ column.\ This\ int\ along\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ with\ the\ int\ row\ ends\ up\ going\ through\ each\ cell\ in\ the\ 30X30\ array\n\ @return\ The\ return\ value\ is\ an\ int\ which\ contains\ the\ number\ of\ neighbors.\ It\ is\ then\ passed\ on\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ the\ method\ neighborCheck()\ to\ continue\ the\ process\ in\ determining\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ next\ generation.\n
comment7.params=nosNeighbors\ alive
comment7.target=boolean\ neighborCheck(int,\ boolean)
comment7.text=\n\ Method\ neighborCheck\ is\ a\ method\ which\ selects\ each\ cell\ and\ goes\ through\ several\ conditions\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ determine\ whether\ or\ not\ the\ cell\ should\ be\ dead\ or\ alive\ in\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ following\ generation\n\n\ @param\ nosNeighbors\ an\ integer\ which\ holds\ the\ number\ of\ neighbors\ for\ the\ selected\ cell\n\ @param\ alive\ a\ boolean\ value\ which\ has\ two\ states\:\ Alive\ and\ Dead\n\ @return\ The\ return\ value\ is\ a\ boolean\ which\ decides\ the\ outcome\ of\ the\ selected\ cell\ in\ the\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ following\ generation\n
comment8.params=map\ x\ y
comment8.target=boolean\ boundsChecker(boolean[][],\ int,\ int)
comment8.text=\n\ Method\ boundsChecker\ is\ a\ bounds\ checking\ method\ that\ makes\ sure\ that\ the\ program\ and\ all\ its\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ methods\ remain\ within\ the\ alotted\ boundaries.\ \n\n\ @param\ map\ A\ parameter\ which\ is\ the\ 2D\ array\ printed\ in\ the\ console\ window\n\ @param\ x\ A\ parameter\ which\ is\ an\ int\ which\ represents\ all\ the\ cells\ in\ the\ x-plane\ of\ the\ array\n\ @param\ y\ A\ parameter\ which\ is\ an\ int\ that\ represents\ cells\ when\ going\ through\ the\ y-plane\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ of\ the\ array\n\ @return\ The\ return\ value\ is\ a\ boolean\ that\ tells\ us\ the\ following\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Whether\ or\ not\ x\ is\ greater\ or\ equal\ to\ 0\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Whether\ or\ not\ x\ is\ smaller\ than\ the\ length\ of\ the\ map\ (30)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Whether\ or\ not\ y\ is\ greater\ or\ equal\ to\ 0\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ Whether\ or\ not\ y\ is\ smaller\ than\ the\ map\ length\ at\ index\ 0\n
comment9.params=map
comment9.target=boolean[][]\ nextGeneration(boolean[][])
comment9.text=\n\ Method\ nextGeneration\ is\ a\ method\ that\ uses\ the\ data\ collected\ in\ neighborCounter,\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ neighborCheck\ &\ boundsChecker\ to\ create\ the\ grid\ for\ the\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ next\ generation\n\n\ @param\ map\ A\ parameter\ which\ is\ a\ 2D\ array\ which\ encompasses\ the\ whole\ map\n\ @return\ The\ return\ value\ is\ the\ updated\ grid\ which\ will\ be\ displayed\ to\ the\ user\ upon\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pressing\ enter\n
numComments=10
